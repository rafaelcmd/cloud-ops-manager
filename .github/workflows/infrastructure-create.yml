name: Infrastructure - Create

on:
  push:
    branches:
      - main
    paths:
      - 'infrastructure/environments/dev/**'
  pull_request:
    paths:
      - 'infrastructure/environments/dev/**'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: infrastructure/environments/dev
        shell: bash

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format
        run: terraform fmt

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -input=false

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false

      - name: Extract EC2 Module Output
        id: ec2_output
        run: |
          # Extract EC2 instance data from Terraform output
          EC2_PUBLIC_IP=$(terraform output -raw resource_provisioner_api_host)
          EC2_USERNAME=$(terraform output -raw resource_provisioner_api_username)
          echo "EC2 Public IP: $EC2_PUBLIC_IP"
          echo "EC2 Username: $EC2_USERNAME"
          
          # Save the output to GitHub Actions environment for later use
          echo "EC2_PUBLIC_IP=$EC2_PUBLIC_IP" >> $GITHUB_ENV
          echo "EC2_USERNAME=$EC2_USERNAME" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Save EC2 Public IP to AWS SSM Parameter Store
        run: |
          aws ssm put-parameter \
            --name "/my-app/ec2-public-ip" \
            --value "$EC2_PUBLIC_IP" \
            --type "String" \
            --overwrite

      - name: Save EC2 Username to AWS SSM Parameter Store
        run: |
          aws ssm put-parameter \
            --name "/my-app/ec2-username" \
            --value "$EC2_USERNAME" \
            --type "String" \
            --overwrite