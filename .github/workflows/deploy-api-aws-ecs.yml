name: Deploy - API to AWS ECS

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Log in to AWS ECR
        run: aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/cloud_ops_manager_ecr_repository:latest

      - name: Build and Push Docker image
        run: |
          docker build -f api/Dockerfile.dev -t cloud-ops-manager-api api
          docker tag cloud-ops-manager-api:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/cloud_ops_manager_ecr_repository:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/cloud_ops_manager_ecr_repository:latest

      - name: Update ECS Service
        run: |
          aws ecs update-service \
            --cluster cloudops-manager-cluster \
            --service resource-provisioner-api-service \
            --force-new-deployment \
            --region ${{ secrets.AWS_REGION }}